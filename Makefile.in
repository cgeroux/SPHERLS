# Makefile.in generated by automake 1.16.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2018 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

#CXX=mpic++, this should really be the case after running configure



VPATH = @srcdir@
am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :

#supporting libraries, included if --disable-include-crucial-libs not set in
#configuration
@INCLUDE_CRUCIAL_LIBS_IN_DIST_TRUE@am__append_1 =  \
@INCLUDE_CRUCIAL_LIBS_IN_DIST_TRUE@	libs/openmpi-1.6.3.tar.gz \
@INCLUDE_CRUCIAL_LIBS_IN_DIST_TRUE@	libs/petsc-3.1-p8.tar.gz

#supporting libraries, included if --enable-optional-crucial-libs set in
#configuration
@INCLUDE_OPTIONAL_LIBS_IN_DIST_TRUE@am__append_2 = libs/evtk.tar.gz \
@INCLUDE_OPTIONAL_LIBS_IN_DIST_TRUE@	libs/Cython-0.19.1.tar.gz \
@INCLUDE_OPTIONAL_LIBS_IN_DIST_TRUE@	libs/fftw-3.3.3.tar.gz \
@INCLUDE_OPTIONAL_LIBS_IN_DIST_TRUE@	libs/doxygen-1.8.3.1.src.tar.gz \
@INCLUDE_OPTIONAL_LIBS_IN_DIST_TRUE@	libs/hdf-4.2.8.tar.gz \
@INCLUDE_OPTIONAL_LIBS_IN_DIST_TRUE@	libs/jpegsrc.v8d.tar.gz \
@INCLUDE_OPTIONAL_LIBS_IN_DIST_TRUE@	libs/ffmpeg-1.2.tar.gz \
@INCLUDE_OPTIONAL_LIBS_IN_DIST_TRUE@	libs/yasm-1.2.0.tar.gz \
@INCLUDE_OPTIONAL_LIBS_IN_DIST_TRUE@	#needed by ffmpeg
@HDF_ENABLE_TRUE@am__append_3 = ./src/pythonextensions/lib/hdf.so
@CYTHON_ENABLE_TRUE@am__append_4 = ./src/pythonextensions/lib/eos.so
bin_PROGRAMS = SPHERLS$(EXEEXT) SPHERLSanal$(EXEEXT) \
	SPHERLSgen$(EXEEXT)
@CYTHON_ENABLE_TRUE@am__append_5 = src/pythonextensions/lib/eos.so \
@CYTHON_ENABLE_TRUE@	src/pythonextensions/lib/cevtk.so
subdir = .
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(top_srcdir)/configure \
	$(am__configure_deps) $(am__DIST_COMMON)
am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \
 configure.lineno config.status.lineno
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = config.h
CONFIG_CLEAN_FILES = src/pythonextensions/hdf/setup.py
CONFIG_CLEAN_VPATH_FILES =
am__installdirs = "$(DESTDIR)$(bindir)" "$(DESTDIR)$(bindir)" \
	"$(DESTDIR)$(AFOPACITYGN93dir)" "$(DESTDIR)$(GN93hzdir)" \
	"$(DESTDIR)$(atmospheresdir)" "$(DESTDIR)$(energyprodir)" \
	"$(DESTDIR)$(eosdir)" "$(DESTDIR)$(evtkdir)" \
	"$(DESTDIR)$(evtkexampledir)" "$(DESTDIR)$(manualsdir)" \
	"$(DESTDIR)$(opaleos2005dir)" "$(DESTDIR)$(refcalcs1DNAdir)" \
	"$(DESTDIR)$(refcalcs2DNAdir)" "$(DESTDIR)$(refcalcs3DNAdir)" \
	"$(DESTDIR)$(templatexmldir)" "$(DESTDIR)$(velocityprodir)"
PROGRAMS = $(bin_PROGRAMS)
am__dirstamp = $(am__leading_dot)dirstamp
am_SPHERLS_OBJECTS = src/SPHERLS/SPHERLS-dataManipulation.$(OBJEXT) \
	src/SPHERLS/SPHERLS-dataMonitoring.$(OBJEXT) \
	src/SPHERLS/SPHERLS-global.$(OBJEXT) \
	src/SPHERLS/SPHERLS-main.$(OBJEXT) \
	src/SPHERLS/SPHERLS-physEquations.$(OBJEXT) \
	src/SPHERLS/SPHERLS-watchzone.$(OBJEXT) \
	src/SPHERLS/SPHERLS-time.$(OBJEXT) \
	src/SPHERLS/SPHERLS-procTop.$(OBJEXT) \
	src/SPHERLS/SPHERLS-profileData.$(OBJEXT) \
	src/SPHERLS/SPHERLS-fileExists.$(OBJEXT) \
	src/SPHERLS-eos.$(OBJEXT) src/SPHERLS-exception2.$(OBJEXT) \
	src/SPHERLS-xmlFunctions.$(OBJEXT) \
	src/SPHERLS-xmlParser.$(OBJEXT)
SPHERLS_OBJECTS = $(am_SPHERLS_OBJECTS)
SPHERLS_LDADD = $(LDADD)
am_SPHERLSanal_OBJECTS = src/SPHERLSanal/SPHERLSanal-main.$(OBJEXT) \
	src/SPHERLSanal-eos.$(OBJEXT) \
	src/SPHERLSanal-exception2.$(OBJEXT)
SPHERLSanal_OBJECTS = $(am_SPHERLSanal_OBJECTS)
SPHERLSanal_LDADD = $(LDADD)
am_SPHERLSgen_OBJECTS = src/SPHERLSgen/SPHERLSgen-main.$(OBJEXT) \
	src/SPHERLSgen-exception2.$(OBJEXT) \
	src/SPHERLSgen-xmlFunctions.$(OBJEXT) \
	src/SPHERLSgen-eos.$(OBJEXT) \
	src/SPHERLSgen-xmlParser.$(OBJEXT)
SPHERLSgen_OBJECTS = $(am_SPHERLSgen_OBJECTS)
SPHERLSgen_LDADD = $(LDADD)
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
SCRIPTS = $(bin_SCRIPTS)
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.@am__isrc@
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__maybe_remake_depfiles = depfiles
am__depfiles_remade = src/$(DEPDIR)/SPHERLS-eos.Po \
	src/$(DEPDIR)/SPHERLS-exception2.Po \
	src/$(DEPDIR)/SPHERLS-xmlFunctions.Po \
	src/$(DEPDIR)/SPHERLS-xmlParser.Po \
	src/$(DEPDIR)/SPHERLSanal-eos.Po \
	src/$(DEPDIR)/SPHERLSanal-exception2.Po \
	src/$(DEPDIR)/SPHERLSgen-eos.Po \
	src/$(DEPDIR)/SPHERLSgen-exception2.Po \
	src/$(DEPDIR)/SPHERLSgen-xmlFunctions.Po \
	src/$(DEPDIR)/SPHERLSgen-xmlParser.Po \
	src/SPHERLS/$(DEPDIR)/SPHERLS-dataManipulation.Po \
	src/SPHERLS/$(DEPDIR)/SPHERLS-dataMonitoring.Po \
	src/SPHERLS/$(DEPDIR)/SPHERLS-fileExists.Po \
	src/SPHERLS/$(DEPDIR)/SPHERLS-global.Po \
	src/SPHERLS/$(DEPDIR)/SPHERLS-main.Po \
	src/SPHERLS/$(DEPDIR)/SPHERLS-physEquations.Po \
	src/SPHERLS/$(DEPDIR)/SPHERLS-procTop.Po \
	src/SPHERLS/$(DEPDIR)/SPHERLS-profileData.Po \
	src/SPHERLS/$(DEPDIR)/SPHERLS-time.Po \
	src/SPHERLS/$(DEPDIR)/SPHERLS-watchzone.Po \
	src/SPHERLSanal/$(DEPDIR)/SPHERLSanal-main.Po \
	src/SPHERLSgen/$(DEPDIR)/SPHERLSgen-main.Po
am__mv = mv -f
AM_V_lt = $(am__v_lt_@AM_V@)
am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)
am__v_lt_0 = --silent
am__v_lt_1 = 
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_@AM_V@)
am__v_CXX_ = $(am__v_CXX_@AM_DEFAULT_V@)
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
AM_V_CXXLD = $(am__v_CXXLD_@AM_V@)
am__v_CXXLD_ = $(am__v_CXXLD_@AM_DEFAULT_V@)
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_@AM_V@)
am__v_CC_ = $(am__v_CC_@AM_DEFAULT_V@)
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_@AM_V@)
am__v_CCLD_ = $(am__v_CCLD_@AM_DEFAULT_V@)
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(SPHERLS_SOURCES) $(SPHERLSanal_SOURCES) \
	$(SPHERLSgen_SOURCES)
DIST_SOURCES = $(SPHERLS_SOURCES) $(SPHERLSanal_SOURCES) \
	$(SPHERLSgen_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
DATA = $(AFOPACITYGN93_DATA) $(GN93hz_DATA) $(atmospheres_DATA) \
	$(energypro_DATA) $(eos_DATA) $(evtk_DATA) $(evtkexample_DATA) \
	$(manuals_DATA) $(opaleos2005_DATA) $(refcalcs1DNA_DATA) \
	$(refcalcs2DNA_DATA) $(refcalcs3DNA_DATA) $(templatexml_DATA) \
	$(velocitypro_DATA)
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) \
	$(LISP)config.h.in
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
CSCOPE = cscope
AM_RECURSIVE_TARGETS = cscope
am__DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/config.h.in \
	$(top_srcdir)/src/pythonextensions/hdf/setup.py.in README \
	compile depcomp install-sh missing
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
distdir = $(PACKAGE)-$(VERSION)
top_distdir = $(distdir)
am__remove_distdir = \
  if test -d "$(distdir)"; then \
    find "$(distdir)" -type d ! -perm -200 -exec chmod u+w {} ';' \
      && rm -rf "$(distdir)" \
      || { sleep 5 && rm -rf "$(distdir)"; }; \
  else :; fi
am__post_remove_distdir = $(am__remove_distdir)
DIST_ARCHIVES = $(distdir).tar.gz
GZIP_ENV = --best
DIST_TARGETS = dist-gzip
distuninstallcheck_listfiles = find . -type f -print
am__distuninstallcheck_listfiles = $(distuninstallcheck_listfiles) \
  | sed 's|^\./|$(prefix)/|' | grep -v '$(infodir)/dir$$'
distcleancheck_listfiles = find . -type f -print
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
GREP = @GREP@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MKDIR_P = @MKDIR_P@
MPICPP_CHECK = @MPICPP_CHECK@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
POW_LIB = @POW_LIB@
PS2PDF_EXISTS = @PS2PDF_EXISTS@
PYTHONLIBDIR = @PYTHONLIBDIR@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build_alias = @build_alias@
builddir = @builddir@

###############################################################################
# INSTALL DATA & EXTRA_DIST ###################################################
###############################################################################
datadir = ${prefix}/data
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host_alias = @host_alias@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
runstatedir = @runstatedir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
docsdir = ${prefix}/docs

#atmosphere models
atmospheresdir = ${datadir}/atmospheres
atmospheres_DATA = data/atmospheres/table3.dat\
               data/atmospheres/table2p3combined.dat\
               data/atmospheres/table2.dat\
               data/atmospheres/ReadMe.txt


#scripts

#python c++ extensions

###############################################################################
# DOCS ########################################################################
###############################################################################
EXTRA_DIST = ${atmospheres_DATA} ${energypro_DATA} ${opaleos2005_DATA} \
	${GN93hz_DATA} ${AFOPACITYGN93_DATA} ${eos_DATA} \
	${refcalcs1DNA_DATA} ${refcalcs2DNA_DATA} ${refcalcs3DNA_DATA} \
	${velocitypro_DATA} ${manuals_DATA} ${templatexml_DATA} \
	scripts/*.py src/pythonextensions/hdf/hdfmodule.cpp \
	src/pythonextensions/hdf/setup.py.in \
	src/pythonextensions/eos/eos.pyx \
	src/pythonextensions/eos/setup.py $(am__append_1) \
	$(am__append_2) src/docs/userguide.tex scripts/Doxyfile \
	src/SPHERLSanal/Doxyfile src/SPHERLSgen/Doxyfile \
	src/SPHERLS/Doxyfile ${cevtk_SOURCE}

#energy profiles
energyprodir = ${datadir}/energy_pro
energypro_DATA = data/energy_pro/Epro.dat\
               data/energy_pro/Epro_mod.dat\
               data/energy_pro/Epro_points.dat


#OPAL/Alexander Furguson EOS and opacity files
opaleos2005dir = ${datadir}/OPAL_EOS_2005
opaleos2005_DATA = data/OPAL_EOS_2005/EOS5_0*
GN93hzdir = ${datadir}/OPAL_OPACITY_GN93
GN93hz_DATA = data/OPAL_OPACITY_GN93/GN93hz
AFOPACITYGN93dir = ${datadir}/AF_OPACITY_GN93_1994
AFOPACITYGN93_DATA = data/AF_OPACITY_GN93_1994/g*.*.tron

#eos files
eosdir = ${datadir}/eos
eos_DATA = data/eos/convert.cpp\
         data/eos/Makefile\
         data/eos/eosCTOPAC\
         data/eos/eosY240Z002\
         data/eos/eosY300Z002\
         data/eos/eosNewY240Z002_wider_finer\
         data/eos/eosNewY240Z002.xml\
         data/eos/eosNewY300Z002_wider_finer\
         data/eos/eosNewY240Z0005_wider_finer


#ref calcs, will include .svn files :(, not a problem under git
refcalcsdir = ${datadir}/ref_calcs
refcalcs1DNAdir = ${refcalcsdir}/1DNA
refcalcs1DNA_DATA = data/ref_calcs/1DNA/1*\
              data/ref_calcs/1DNA/*.xml\
              data/ref_calcs/1DNA/*.txt

refcalcs2DNAdir = ${refcalcsdir}/2DNA
refcalcs2DNA_DATA = data/ref_calcs/2DNA/2*\
              data/ref_calcs/2DNA/*.xml\
              data/ref_calcs/2DNA/*.txt

refcalcs3DNAdir = ${refcalcsdir}/3DNA
refcalcs3DNA_DATA = data/ref_calcs/3DNA/3*\
              data/ref_calcs/3DNA/*.xml\
              data/ref_calcs/3DNA/*.txt


#velocity profiles
velocityprodir = ${datadir}/velocity_pro
velocitypro_DATA = data/velocity_pro/*.dat

#Manuals
manualsdir = ${docsdir}/manuals
manuals_DATA = \
  docs/manuals/SPHERLS_Ref_Manual.pdf\
  docs/manuals/SPHERLSgen_Ref_Manual.pdf\
  docs/manuals/SPHERLSanal_Ref_Manual.pdf\
  docs/manuals/Scripts_Ref_Manual.pdf\
  docs/manuals/SPHERLS_User_Guide.pdf


#template xml files
templatexmldir = ${docsdir}/templateXML
templatexml_DATA = docs/templateXML/*.xml

###############################################################################
# BINS + SOURCE ###############################################################
###############################################################################
bin_SCRIPTS = ./scripts/*.py $(am__append_3) $(am__append_4)
@CYTHON_ENABLE_TRUE@evtkdir = $(prefix)/bin/evtk
@CYTHON_ENABLE_TRUE@evtkexampledir = $(prefix)/bin/evtk/examples
@CYTHON_ENABLE_TRUE@evtkexample_DATA = ./src/pythonextensions/lib/evtk/examples/*
@CYTHON_ENABLE_TRUE@evtk_DATA = ./src/pythonextensions/lib/evtk/*.py ./src/pythonextensions/lib/evtk/*.pyc ./src/pythonextensions/lib/evtk/*.so ./src/pythonextensions/lib/evtk/LICENSE
#dist_pkgdata_DATA=./data/energy_pro/*	./data/eos/*	./data/ref_cals/*	./data/velocity_pro/*
SPHERLS_SOURCES = \
	src/SPHERLS/dataManipulation.cpp	\
	src/SPHERLS/dataMonitoring.cpp	\
	src/SPHERLS/dataMonitoring.h	\
	src/SPHERLS/global.cpp	\
	src/SPHERLS/global.h	\
	src/SPHERLS/main.cpp	\
	src/SPHERLS/main.h	\
	src/SPHERLS/physEquations.cpp	\
	src/SPHERLS/physEquations.h	\
	src/SPHERLS/watchzone.cpp	\
	src/SPHERLS/dataManipulation.h	\
	src/SPHERLS/time.h	\
	src/SPHERLS/time.cpp	\
	src/SPHERLS/procTop.h	\
	src/SPHERLS/procTop.cpp	\
	src/SPHERLS/watchzone.h	\
	src/SPHERLS/profileData.cpp	\
	src/SPHERLS/profileData.h	\
	src/SPHERLS/fileExists.h	\
	src/SPHERLS/fileExists.cpp	\
	src/eos.cpp	\
	src/eos.h	\
	src/exception2.cpp	\
	src/exception2.h	\
	src/xmlFunctions.cpp	\
	src/xmlFunctions.h	\
	src/xmlParser.cpp	\
	src/xmlParser.h

SPHERLS_CPPFLAGS = -Isrc/
SPHERLSanal_SOURCES = \
	src/SPHERLSanal/main.cpp	\
	src/SPHERLSanal/main.h	\
	src/eos.h	\
	src/eos.cpp	\
	src/exception2.cpp	\
	src/exception2.h	

@CYTHON_ENABLE_TRUE@@HDF_ENABLE_TRUE@BUILT_SOURCES = src/pythonextensions/lib/hdf.so \
@CYTHON_ENABLE_TRUE@@HDF_ENABLE_TRUE@	$(am__append_5)
@HDF_ENABLE_FALSE@BUILT_SOURCES = $(am__append_5)
SPHERLSanal_CPPFLAGS = -Isrc/ 
SPHERLSgen_SOURCES = \
	src/SPHERLSgen/main.cpp	\
	src/SPHERLSgen/main.h	\
	src/exception2.cpp	\
	src/exception2.h	\
	src/xmlFunctions.cpp	\
	src/xmlFunctions.h	\
	src/eos.h	\
	src/eos.cpp	\
	src/xmlParser.h	\
	src/xmlParser.cpp

SPHERLSgen_CPPFLAGS = -Isrc/

#make vtk file python module
cevtk_SOURCE = \
./src/pythonextensions/evtk/setup.py\
./src/pythonextensions/evtk/README.txt\
./src/pythonextensions/evtk/src/hl.py\
./src/pythonextensions/evtk/src/__init__.py\
./src/pythonextensions/evtk/src/cevtk.pyx\
./src/pythonextensions/evtk/src/vtk.py\
./src/pythonextensions/evtk/src/xml.py\
./src/pythonextensions/evtk/src/LICENSE\
./src/pythonextensions/evtk/src/examples/group.py\
./src/pythonextensions/evtk/src/examples/image.py\
./src/pythonextensions/evtk/src/examples/__init__.py\
./src/pythonextensions/evtk/src/examples/lowlevel.py\
./src/pythonextensions/evtk/src/examples/points.py\
./src/pythonextensions/evtk/src/examples/rectilinear.py\
./src/pythonextensions/evtk/src/examples/structured.py

CLEANFILES = \
src/docs/userguide.pdf\
src/docs/userguide.out\
src/docs/userguide.log\
src/docs/userguide.aux\
src/pythonextensions/eos/exception2.h\
src/pythonextensions/eos/exception2.cpp\
src/pythonextensions/eos/eos_tmp.cpp\
src/pythonextensions/eos/eos.h\
src/pythonextensions/eos/eos.cpp\
src/pythonextensions/evtk/src/cevtk.c

DISTCLEANFILES = \
src/pythonextensions/hdf/setup.py

all: $(BUILT_SOURCES) config.h
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .cpp .o .obj
am--refresh: Makefile
	@:
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      echo ' cd $(srcdir) && $(AUTOMAKE) --foreign'; \
	      $(am__cd) $(srcdir) && $(AUTOMAKE) --foreign \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    echo ' $(SHELL) ./config.status'; \
	    $(SHELL) ./config.status;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__maybe_remake_depfiles)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__maybe_remake_depfiles);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	$(SHELL) ./config.status --recheck

$(top_srcdir)/configure:  $(am__configure_deps)
	$(am__cd) $(srcdir) && $(AUTOCONF)
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	$(am__cd) $(srcdir) && $(ACLOCAL) $(ACLOCAL_AMFLAGS)
$(am__aclocal_m4_deps):

config.h: stamp-h1
	@test -f $@ || rm -f stamp-h1
	@test -f $@ || $(MAKE) $(AM_MAKEFLAGS) stamp-h1

stamp-h1: $(srcdir)/config.h.in $(top_builddir)/config.status
	@rm -f stamp-h1
	cd $(top_builddir) && $(SHELL) ./config.status config.h
$(srcdir)/config.h.in:  $(am__configure_deps) 
	($(am__cd) $(top_srcdir) && $(AUTOHEADER))
	rm -f stamp-h1
	touch $@

distclean-hdr:
	-rm -f config.h stamp-h1
src/pythonextensions/hdf/setup.py: $(top_builddir)/config.status $(top_srcdir)/src/pythonextensions/hdf/setup.py.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	      echo " $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	      $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)
src/SPHERLS/$(am__dirstamp):
	@$(MKDIR_P) src/SPHERLS
	@: > src/SPHERLS/$(am__dirstamp)
src/SPHERLS/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/SPHERLS/$(DEPDIR)
	@: > src/SPHERLS/$(DEPDIR)/$(am__dirstamp)
src/SPHERLS/SPHERLS-dataManipulation.$(OBJEXT):  \
	src/SPHERLS/$(am__dirstamp) \
	src/SPHERLS/$(DEPDIR)/$(am__dirstamp)
src/SPHERLS/SPHERLS-dataMonitoring.$(OBJEXT):  \
	src/SPHERLS/$(am__dirstamp) \
	src/SPHERLS/$(DEPDIR)/$(am__dirstamp)
src/SPHERLS/SPHERLS-global.$(OBJEXT): src/SPHERLS/$(am__dirstamp) \
	src/SPHERLS/$(DEPDIR)/$(am__dirstamp)
src/SPHERLS/SPHERLS-main.$(OBJEXT): src/SPHERLS/$(am__dirstamp) \
	src/SPHERLS/$(DEPDIR)/$(am__dirstamp)
src/SPHERLS/SPHERLS-physEquations.$(OBJEXT):  \
	src/SPHERLS/$(am__dirstamp) \
	src/SPHERLS/$(DEPDIR)/$(am__dirstamp)
src/SPHERLS/SPHERLS-watchzone.$(OBJEXT): src/SPHERLS/$(am__dirstamp) \
	src/SPHERLS/$(DEPDIR)/$(am__dirstamp)
src/SPHERLS/SPHERLS-time.$(OBJEXT): src/SPHERLS/$(am__dirstamp) \
	src/SPHERLS/$(DEPDIR)/$(am__dirstamp)
src/SPHERLS/SPHERLS-procTop.$(OBJEXT): src/SPHERLS/$(am__dirstamp) \
	src/SPHERLS/$(DEPDIR)/$(am__dirstamp)
src/SPHERLS/SPHERLS-profileData.$(OBJEXT):  \
	src/SPHERLS/$(am__dirstamp) \
	src/SPHERLS/$(DEPDIR)/$(am__dirstamp)
src/SPHERLS/SPHERLS-fileExists.$(OBJEXT): src/SPHERLS/$(am__dirstamp) \
	src/SPHERLS/$(DEPDIR)/$(am__dirstamp)
src/$(am__dirstamp):
	@$(MKDIR_P) src
	@: > src/$(am__dirstamp)
src/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/$(DEPDIR)
	@: > src/$(DEPDIR)/$(am__dirstamp)
src/SPHERLS-eos.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/SPHERLS-exception2.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/SPHERLS-xmlFunctions.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/SPHERLS-xmlParser.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)

SPHERLS$(EXEEXT): $(SPHERLS_OBJECTS) $(SPHERLS_DEPENDENCIES) $(EXTRA_SPHERLS_DEPENDENCIES) 
	@rm -f SPHERLS$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(SPHERLS_OBJECTS) $(SPHERLS_LDADD) $(LIBS)
src/SPHERLSanal/$(am__dirstamp):
	@$(MKDIR_P) src/SPHERLSanal
	@: > src/SPHERLSanal/$(am__dirstamp)
src/SPHERLSanal/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/SPHERLSanal/$(DEPDIR)
	@: > src/SPHERLSanal/$(DEPDIR)/$(am__dirstamp)
src/SPHERLSanal/SPHERLSanal-main.$(OBJEXT):  \
	src/SPHERLSanal/$(am__dirstamp) \
	src/SPHERLSanal/$(DEPDIR)/$(am__dirstamp)
src/SPHERLSanal-eos.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/SPHERLSanal-exception2.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)

SPHERLSanal$(EXEEXT): $(SPHERLSanal_OBJECTS) $(SPHERLSanal_DEPENDENCIES) $(EXTRA_SPHERLSanal_DEPENDENCIES) 
	@rm -f SPHERLSanal$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(SPHERLSanal_OBJECTS) $(SPHERLSanal_LDADD) $(LIBS)
src/SPHERLSgen/$(am__dirstamp):
	@$(MKDIR_P) src/SPHERLSgen
	@: > src/SPHERLSgen/$(am__dirstamp)
src/SPHERLSgen/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/SPHERLSgen/$(DEPDIR)
	@: > src/SPHERLSgen/$(DEPDIR)/$(am__dirstamp)
src/SPHERLSgen/SPHERLSgen-main.$(OBJEXT):  \
	src/SPHERLSgen/$(am__dirstamp) \
	src/SPHERLSgen/$(DEPDIR)/$(am__dirstamp)
src/SPHERLSgen-exception2.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/SPHERLSgen-xmlFunctions.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/SPHERLSgen-eos.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/SPHERLSgen-xmlParser.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)

SPHERLSgen$(EXEEXT): $(SPHERLSgen_OBJECTS) $(SPHERLSgen_DEPENDENCIES) $(EXTRA_SPHERLSgen_DEPENDENCIES) 
	@rm -f SPHERLSgen$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(SPHERLSgen_OBJECTS) $(SPHERLSgen_LDADD) $(LIBS)
install-binSCRIPTS: $(bin_SCRIPTS)
	@$(NORMAL_INSTALL)
	@list='$(bin_SCRIPTS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  if test -f "$$d$$p"; then echo "$$d$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n' \
	    -e 'h;s|.*|.|' \
	    -e 'p;x;s,.*/,,;$(transform)' | sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1; } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) { files[d] = files[d] " " $$1; \
	      if (++n[d] == $(am__install_max)) { \
		print "f", d, files[d]; n[d] = 0; files[d] = "" } } \
	    else { print "f", d "/" $$4, $$1 } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	     if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	     test -z "$$files" || { \
	       echo " $(INSTALL_SCRIPT) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	       $(INSTALL_SCRIPT) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	     } \
	; done

uninstall-binSCRIPTS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_SCRIPTS)'; test -n "$(bindir)" || exit 0; \
	files=`for p in $$list; do echo "$$p"; done | \
	       sed -e 's,.*/,,;$(transform)'`; \
	dir='$(DESTDIR)$(bindir)'; $(am__uninstall_files_from_dir)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)
	-rm -f src/*.$(OBJEXT)
	-rm -f src/SPHERLS/*.$(OBJEXT)
	-rm -f src/SPHERLSanal/*.$(OBJEXT)
	-rm -f src/SPHERLSgen/*.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/SPHERLS-eos.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/SPHERLS-exception2.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/SPHERLS-xmlFunctions.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/SPHERLS-xmlParser.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/SPHERLSanal-eos.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/SPHERLSanal-exception2.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/SPHERLSgen-eos.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/SPHERLSgen-exception2.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/SPHERLSgen-xmlFunctions.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/SPHERLSgen-xmlParser.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@src/SPHERLS/$(DEPDIR)/SPHERLS-dataManipulation.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@src/SPHERLS/$(DEPDIR)/SPHERLS-dataMonitoring.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@src/SPHERLS/$(DEPDIR)/SPHERLS-fileExists.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@src/SPHERLS/$(DEPDIR)/SPHERLS-global.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@src/SPHERLS/$(DEPDIR)/SPHERLS-main.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@src/SPHERLS/$(DEPDIR)/SPHERLS-physEquations.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@src/SPHERLS/$(DEPDIR)/SPHERLS-procTop.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@src/SPHERLS/$(DEPDIR)/SPHERLS-profileData.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@src/SPHERLS/$(DEPDIR)/SPHERLS-time.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@src/SPHERLS/$(DEPDIR)/SPHERLS-watchzone.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@src/SPHERLSanal/$(DEPDIR)/SPHERLSanal-main.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@src/SPHERLSgen/$(DEPDIR)/SPHERLSgen-main.Po@am__quote@ # am--include-marker

$(am__depfiles_remade):
	@$(MKDIR_P) $(@D)
	@echo '# dummy' >$@-t && $(am__mv) $@-t $@

am--depfiles: $(am__depfiles_remade)

.cpp.o:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

src/SPHERLS/SPHERLS-dataManipulation.o: src/SPHERLS/dataManipulation.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SPHERLS_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/SPHERLS/SPHERLS-dataManipulation.o -MD -MP -MF src/SPHERLS/$(DEPDIR)/SPHERLS-dataManipulation.Tpo -c -o src/SPHERLS/SPHERLS-dataManipulation.o `test -f 'src/SPHERLS/dataManipulation.cpp' || echo '$(srcdir)/'`src/SPHERLS/dataManipulation.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/SPHERLS/$(DEPDIR)/SPHERLS-dataManipulation.Tpo src/SPHERLS/$(DEPDIR)/SPHERLS-dataManipulation.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/SPHERLS/dataManipulation.cpp' object='src/SPHERLS/SPHERLS-dataManipulation.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SPHERLS_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/SPHERLS/SPHERLS-dataManipulation.o `test -f 'src/SPHERLS/dataManipulation.cpp' || echo '$(srcdir)/'`src/SPHERLS/dataManipulation.cpp

src/SPHERLS/SPHERLS-dataManipulation.obj: src/SPHERLS/dataManipulation.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SPHERLS_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/SPHERLS/SPHERLS-dataManipulation.obj -MD -MP -MF src/SPHERLS/$(DEPDIR)/SPHERLS-dataManipulation.Tpo -c -o src/SPHERLS/SPHERLS-dataManipulation.obj `if test -f 'src/SPHERLS/dataManipulation.cpp'; then $(CYGPATH_W) 'src/SPHERLS/dataManipulation.cpp'; else $(CYGPATH_W) '$(srcdir)/src/SPHERLS/dataManipulation.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/SPHERLS/$(DEPDIR)/SPHERLS-dataManipulation.Tpo src/SPHERLS/$(DEPDIR)/SPHERLS-dataManipulation.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/SPHERLS/dataManipulation.cpp' object='src/SPHERLS/SPHERLS-dataManipulation.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SPHERLS_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/SPHERLS/SPHERLS-dataManipulation.obj `if test -f 'src/SPHERLS/dataManipulation.cpp'; then $(CYGPATH_W) 'src/SPHERLS/dataManipulation.cpp'; else $(CYGPATH_W) '$(srcdir)/src/SPHERLS/dataManipulation.cpp'; fi`

src/SPHERLS/SPHERLS-dataMonitoring.o: src/SPHERLS/dataMonitoring.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SPHERLS_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/SPHERLS/SPHERLS-dataMonitoring.o -MD -MP -MF src/SPHERLS/$(DEPDIR)/SPHERLS-dataMonitoring.Tpo -c -o src/SPHERLS/SPHERLS-dataMonitoring.o `test -f 'src/SPHERLS/dataMonitoring.cpp' || echo '$(srcdir)/'`src/SPHERLS/dataMonitoring.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/SPHERLS/$(DEPDIR)/SPHERLS-dataMonitoring.Tpo src/SPHERLS/$(DEPDIR)/SPHERLS-dataMonitoring.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/SPHERLS/dataMonitoring.cpp' object='src/SPHERLS/SPHERLS-dataMonitoring.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SPHERLS_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/SPHERLS/SPHERLS-dataMonitoring.o `test -f 'src/SPHERLS/dataMonitoring.cpp' || echo '$(srcdir)/'`src/SPHERLS/dataMonitoring.cpp

src/SPHERLS/SPHERLS-dataMonitoring.obj: src/SPHERLS/dataMonitoring.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SPHERLS_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/SPHERLS/SPHERLS-dataMonitoring.obj -MD -MP -MF src/SPHERLS/$(DEPDIR)/SPHERLS-dataMonitoring.Tpo -c -o src/SPHERLS/SPHERLS-dataMonitoring.obj `if test -f 'src/SPHERLS/dataMonitoring.cpp'; then $(CYGPATH_W) 'src/SPHERLS/dataMonitoring.cpp'; else $(CYGPATH_W) '$(srcdir)/src/SPHERLS/dataMonitoring.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/SPHERLS/$(DEPDIR)/SPHERLS-dataMonitoring.Tpo src/SPHERLS/$(DEPDIR)/SPHERLS-dataMonitoring.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/SPHERLS/dataMonitoring.cpp' object='src/SPHERLS/SPHERLS-dataMonitoring.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SPHERLS_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/SPHERLS/SPHERLS-dataMonitoring.obj `if test -f 'src/SPHERLS/dataMonitoring.cpp'; then $(CYGPATH_W) 'src/SPHERLS/dataMonitoring.cpp'; else $(CYGPATH_W) '$(srcdir)/src/SPHERLS/dataMonitoring.cpp'; fi`

src/SPHERLS/SPHERLS-global.o: src/SPHERLS/global.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SPHERLS_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/SPHERLS/SPHERLS-global.o -MD -MP -MF src/SPHERLS/$(DEPDIR)/SPHERLS-global.Tpo -c -o src/SPHERLS/SPHERLS-global.o `test -f 'src/SPHERLS/global.cpp' || echo '$(srcdir)/'`src/SPHERLS/global.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/SPHERLS/$(DEPDIR)/SPHERLS-global.Tpo src/SPHERLS/$(DEPDIR)/SPHERLS-global.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/SPHERLS/global.cpp' object='src/SPHERLS/SPHERLS-global.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SPHERLS_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/SPHERLS/SPHERLS-global.o `test -f 'src/SPHERLS/global.cpp' || echo '$(srcdir)/'`src/SPHERLS/global.cpp

src/SPHERLS/SPHERLS-global.obj: src/SPHERLS/global.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SPHERLS_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/SPHERLS/SPHERLS-global.obj -MD -MP -MF src/SPHERLS/$(DEPDIR)/SPHERLS-global.Tpo -c -o src/SPHERLS/SPHERLS-global.obj `if test -f 'src/SPHERLS/global.cpp'; then $(CYGPATH_W) 'src/SPHERLS/global.cpp'; else $(CYGPATH_W) '$(srcdir)/src/SPHERLS/global.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/SPHERLS/$(DEPDIR)/SPHERLS-global.Tpo src/SPHERLS/$(DEPDIR)/SPHERLS-global.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/SPHERLS/global.cpp' object='src/SPHERLS/SPHERLS-global.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SPHERLS_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/SPHERLS/SPHERLS-global.obj `if test -f 'src/SPHERLS/global.cpp'; then $(CYGPATH_W) 'src/SPHERLS/global.cpp'; else $(CYGPATH_W) '$(srcdir)/src/SPHERLS/global.cpp'; fi`

src/SPHERLS/SPHERLS-main.o: src/SPHERLS/main.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SPHERLS_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/SPHERLS/SPHERLS-main.o -MD -MP -MF src/SPHERLS/$(DEPDIR)/SPHERLS-main.Tpo -c -o src/SPHERLS/SPHERLS-main.o `test -f 'src/SPHERLS/main.cpp' || echo '$(srcdir)/'`src/SPHERLS/main.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/SPHERLS/$(DEPDIR)/SPHERLS-main.Tpo src/SPHERLS/$(DEPDIR)/SPHERLS-main.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/SPHERLS/main.cpp' object='src/SPHERLS/SPHERLS-main.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SPHERLS_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/SPHERLS/SPHERLS-main.o `test -f 'src/SPHERLS/main.cpp' || echo '$(srcdir)/'`src/SPHERLS/main.cpp

src/SPHERLS/SPHERLS-main.obj: src/SPHERLS/main.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SPHERLS_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/SPHERLS/SPHERLS-main.obj -MD -MP -MF src/SPHERLS/$(DEPDIR)/SPHERLS-main.Tpo -c -o src/SPHERLS/SPHERLS-main.obj `if test -f 'src/SPHERLS/main.cpp'; then $(CYGPATH_W) 'src/SPHERLS/main.cpp'; else $(CYGPATH_W) '$(srcdir)/src/SPHERLS/main.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/SPHERLS/$(DEPDIR)/SPHERLS-main.Tpo src/SPHERLS/$(DEPDIR)/SPHERLS-main.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/SPHERLS/main.cpp' object='src/SPHERLS/SPHERLS-main.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SPHERLS_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/SPHERLS/SPHERLS-main.obj `if test -f 'src/SPHERLS/main.cpp'; then $(CYGPATH_W) 'src/SPHERLS/main.cpp'; else $(CYGPATH_W) '$(srcdir)/src/SPHERLS/main.cpp'; fi`

src/SPHERLS/SPHERLS-physEquations.o: src/SPHERLS/physEquations.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SPHERLS_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/SPHERLS/SPHERLS-physEquations.o -MD -MP -MF src/SPHERLS/$(DEPDIR)/SPHERLS-physEquations.Tpo -c -o src/SPHERLS/SPHERLS-physEquations.o `test -f 'src/SPHERLS/physEquations.cpp' || echo '$(srcdir)/'`src/SPHERLS/physEquations.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/SPHERLS/$(DEPDIR)/SPHERLS-physEquations.Tpo src/SPHERLS/$(DEPDIR)/SPHERLS-physEquations.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/SPHERLS/physEquations.cpp' object='src/SPHERLS/SPHERLS-physEquations.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SPHERLS_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/SPHERLS/SPHERLS-physEquations.o `test -f 'src/SPHERLS/physEquations.cpp' || echo '$(srcdir)/'`src/SPHERLS/physEquations.cpp

src/SPHERLS/SPHERLS-physEquations.obj: src/SPHERLS/physEquations.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SPHERLS_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/SPHERLS/SPHERLS-physEquations.obj -MD -MP -MF src/SPHERLS/$(DEPDIR)/SPHERLS-physEquations.Tpo -c -o src/SPHERLS/SPHERLS-physEquations.obj `if test -f 'src/SPHERLS/physEquations.cpp'; then $(CYGPATH_W) 'src/SPHERLS/physEquations.cpp'; else $(CYGPATH_W) '$(srcdir)/src/SPHERLS/physEquations.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/SPHERLS/$(DEPDIR)/SPHERLS-physEquations.Tpo src/SPHERLS/$(DEPDIR)/SPHERLS-physEquations.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/SPHERLS/physEquations.cpp' object='src/SPHERLS/SPHERLS-physEquations.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SPHERLS_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/SPHERLS/SPHERLS-physEquations.obj `if test -f 'src/SPHERLS/physEquations.cpp'; then $(CYGPATH_W) 'src/SPHERLS/physEquations.cpp'; else $(CYGPATH_W) '$(srcdir)/src/SPHERLS/physEquations.cpp'; fi`

src/SPHERLS/SPHERLS-watchzone.o: src/SPHERLS/watchzone.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SPHERLS_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/SPHERLS/SPHERLS-watchzone.o -MD -MP -MF src/SPHERLS/$(DEPDIR)/SPHERLS-watchzone.Tpo -c -o src/SPHERLS/SPHERLS-watchzone.o `test -f 'src/SPHERLS/watchzone.cpp' || echo '$(srcdir)/'`src/SPHERLS/watchzone.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/SPHERLS/$(DEPDIR)/SPHERLS-watchzone.Tpo src/SPHERLS/$(DEPDIR)/SPHERLS-watchzone.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/SPHERLS/watchzone.cpp' object='src/SPHERLS/SPHERLS-watchzone.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SPHERLS_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/SPHERLS/SPHERLS-watchzone.o `test -f 'src/SPHERLS/watchzone.cpp' || echo '$(srcdir)/'`src/SPHERLS/watchzone.cpp

src/SPHERLS/SPHERLS-watchzone.obj: src/SPHERLS/watchzone.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SPHERLS_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/SPHERLS/SPHERLS-watchzone.obj -MD -MP -MF src/SPHERLS/$(DEPDIR)/SPHERLS-watchzone.Tpo -c -o src/SPHERLS/SPHERLS-watchzone.obj `if test -f 'src/SPHERLS/watchzone.cpp'; then $(CYGPATH_W) 'src/SPHERLS/watchzone.cpp'; else $(CYGPATH_W) '$(srcdir)/src/SPHERLS/watchzone.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/SPHERLS/$(DEPDIR)/SPHERLS-watchzone.Tpo src/SPHERLS/$(DEPDIR)/SPHERLS-watchzone.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/SPHERLS/watchzone.cpp' object='src/SPHERLS/SPHERLS-watchzone.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SPHERLS_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/SPHERLS/SPHERLS-watchzone.obj `if test -f 'src/SPHERLS/watchzone.cpp'; then $(CYGPATH_W) 'src/SPHERLS/watchzone.cpp'; else $(CYGPATH_W) '$(srcdir)/src/SPHERLS/watchzone.cpp'; fi`

src/SPHERLS/SPHERLS-time.o: src/SPHERLS/time.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SPHERLS_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/SPHERLS/SPHERLS-time.o -MD -MP -MF src/SPHERLS/$(DEPDIR)/SPHERLS-time.Tpo -c -o src/SPHERLS/SPHERLS-time.o `test -f 'src/SPHERLS/time.cpp' || echo '$(srcdir)/'`src/SPHERLS/time.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/SPHERLS/$(DEPDIR)/SPHERLS-time.Tpo src/SPHERLS/$(DEPDIR)/SPHERLS-time.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/SPHERLS/time.cpp' object='src/SPHERLS/SPHERLS-time.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SPHERLS_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/SPHERLS/SPHERLS-time.o `test -f 'src/SPHERLS/time.cpp' || echo '$(srcdir)/'`src/SPHERLS/time.cpp

src/SPHERLS/SPHERLS-time.obj: src/SPHERLS/time.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SPHERLS_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/SPHERLS/SPHERLS-time.obj -MD -MP -MF src/SPHERLS/$(DEPDIR)/SPHERLS-time.Tpo -c -o src/SPHERLS/SPHERLS-time.obj `if test -f 'src/SPHERLS/time.cpp'; then $(CYGPATH_W) 'src/SPHERLS/time.cpp'; else $(CYGPATH_W) '$(srcdir)/src/SPHERLS/time.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/SPHERLS/$(DEPDIR)/SPHERLS-time.Tpo src/SPHERLS/$(DEPDIR)/SPHERLS-time.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/SPHERLS/time.cpp' object='src/SPHERLS/SPHERLS-time.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SPHERLS_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/SPHERLS/SPHERLS-time.obj `if test -f 'src/SPHERLS/time.cpp'; then $(CYGPATH_W) 'src/SPHERLS/time.cpp'; else $(CYGPATH_W) '$(srcdir)/src/SPHERLS/time.cpp'; fi`

src/SPHERLS/SPHERLS-procTop.o: src/SPHERLS/procTop.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SPHERLS_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/SPHERLS/SPHERLS-procTop.o -MD -MP -MF src/SPHERLS/$(DEPDIR)/SPHERLS-procTop.Tpo -c -o src/SPHERLS/SPHERLS-procTop.o `test -f 'src/SPHERLS/procTop.cpp' || echo '$(srcdir)/'`src/SPHERLS/procTop.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/SPHERLS/$(DEPDIR)/SPHERLS-procTop.Tpo src/SPHERLS/$(DEPDIR)/SPHERLS-procTop.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/SPHERLS/procTop.cpp' object='src/SPHERLS/SPHERLS-procTop.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SPHERLS_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/SPHERLS/SPHERLS-procTop.o `test -f 'src/SPHERLS/procTop.cpp' || echo '$(srcdir)/'`src/SPHERLS/procTop.cpp

src/SPHERLS/SPHERLS-procTop.obj: src/SPHERLS/procTop.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SPHERLS_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/SPHERLS/SPHERLS-procTop.obj -MD -MP -MF src/SPHERLS/$(DEPDIR)/SPHERLS-procTop.Tpo -c -o src/SPHERLS/SPHERLS-procTop.obj `if test -f 'src/SPHERLS/procTop.cpp'; then $(CYGPATH_W) 'src/SPHERLS/procTop.cpp'; else $(CYGPATH_W) '$(srcdir)/src/SPHERLS/procTop.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/SPHERLS/$(DEPDIR)/SPHERLS-procTop.Tpo src/SPHERLS/$(DEPDIR)/SPHERLS-procTop.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/SPHERLS/procTop.cpp' object='src/SPHERLS/SPHERLS-procTop.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SPHERLS_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/SPHERLS/SPHERLS-procTop.obj `if test -f 'src/SPHERLS/procTop.cpp'; then $(CYGPATH_W) 'src/SPHERLS/procTop.cpp'; else $(CYGPATH_W) '$(srcdir)/src/SPHERLS/procTop.cpp'; fi`

src/SPHERLS/SPHERLS-profileData.o: src/SPHERLS/profileData.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SPHERLS_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/SPHERLS/SPHERLS-profileData.o -MD -MP -MF src/SPHERLS/$(DEPDIR)/SPHERLS-profileData.Tpo -c -o src/SPHERLS/SPHERLS-profileData.o `test -f 'src/SPHERLS/profileData.cpp' || echo '$(srcdir)/'`src/SPHERLS/profileData.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/SPHERLS/$(DEPDIR)/SPHERLS-profileData.Tpo src/SPHERLS/$(DEPDIR)/SPHERLS-profileData.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/SPHERLS/profileData.cpp' object='src/SPHERLS/SPHERLS-profileData.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SPHERLS_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/SPHERLS/SPHERLS-profileData.o `test -f 'src/SPHERLS/profileData.cpp' || echo '$(srcdir)/'`src/SPHERLS/profileData.cpp

src/SPHERLS/SPHERLS-profileData.obj: src/SPHERLS/profileData.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SPHERLS_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/SPHERLS/SPHERLS-profileData.obj -MD -MP -MF src/SPHERLS/$(DEPDIR)/SPHERLS-profileData.Tpo -c -o src/SPHERLS/SPHERLS-profileData.obj `if test -f 'src/SPHERLS/profileData.cpp'; then $(CYGPATH_W) 'src/SPHERLS/profileData.cpp'; else $(CYGPATH_W) '$(srcdir)/src/SPHERLS/profileData.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/SPHERLS/$(DEPDIR)/SPHERLS-profileData.Tpo src/SPHERLS/$(DEPDIR)/SPHERLS-profileData.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/SPHERLS/profileData.cpp' object='src/SPHERLS/SPHERLS-profileData.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SPHERLS_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/SPHERLS/SPHERLS-profileData.obj `if test -f 'src/SPHERLS/profileData.cpp'; then $(CYGPATH_W) 'src/SPHERLS/profileData.cpp'; else $(CYGPATH_W) '$(srcdir)/src/SPHERLS/profileData.cpp'; fi`

src/SPHERLS/SPHERLS-fileExists.o: src/SPHERLS/fileExists.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SPHERLS_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/SPHERLS/SPHERLS-fileExists.o -MD -MP -MF src/SPHERLS/$(DEPDIR)/SPHERLS-fileExists.Tpo -c -o src/SPHERLS/SPHERLS-fileExists.o `test -f 'src/SPHERLS/fileExists.cpp' || echo '$(srcdir)/'`src/SPHERLS/fileExists.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/SPHERLS/$(DEPDIR)/SPHERLS-fileExists.Tpo src/SPHERLS/$(DEPDIR)/SPHERLS-fileExists.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/SPHERLS/fileExists.cpp' object='src/SPHERLS/SPHERLS-fileExists.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SPHERLS_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/SPHERLS/SPHERLS-fileExists.o `test -f 'src/SPHERLS/fileExists.cpp' || echo '$(srcdir)/'`src/SPHERLS/fileExists.cpp

src/SPHERLS/SPHERLS-fileExists.obj: src/SPHERLS/fileExists.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SPHERLS_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/SPHERLS/SPHERLS-fileExists.obj -MD -MP -MF src/SPHERLS/$(DEPDIR)/SPHERLS-fileExists.Tpo -c -o src/SPHERLS/SPHERLS-fileExists.obj `if test -f 'src/SPHERLS/fileExists.cpp'; then $(CYGPATH_W) 'src/SPHERLS/fileExists.cpp'; else $(CYGPATH_W) '$(srcdir)/src/SPHERLS/fileExists.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/SPHERLS/$(DEPDIR)/SPHERLS-fileExists.Tpo src/SPHERLS/$(DEPDIR)/SPHERLS-fileExists.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/SPHERLS/fileExists.cpp' object='src/SPHERLS/SPHERLS-fileExists.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SPHERLS_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/SPHERLS/SPHERLS-fileExists.obj `if test -f 'src/SPHERLS/fileExists.cpp'; then $(CYGPATH_W) 'src/SPHERLS/fileExists.cpp'; else $(CYGPATH_W) '$(srcdir)/src/SPHERLS/fileExists.cpp'; fi`

src/SPHERLS-eos.o: src/eos.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SPHERLS_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/SPHERLS-eos.o -MD -MP -MF src/$(DEPDIR)/SPHERLS-eos.Tpo -c -o src/SPHERLS-eos.o `test -f 'src/eos.cpp' || echo '$(srcdir)/'`src/eos.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/SPHERLS-eos.Tpo src/$(DEPDIR)/SPHERLS-eos.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/eos.cpp' object='src/SPHERLS-eos.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SPHERLS_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/SPHERLS-eos.o `test -f 'src/eos.cpp' || echo '$(srcdir)/'`src/eos.cpp

src/SPHERLS-eos.obj: src/eos.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SPHERLS_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/SPHERLS-eos.obj -MD -MP -MF src/$(DEPDIR)/SPHERLS-eos.Tpo -c -o src/SPHERLS-eos.obj `if test -f 'src/eos.cpp'; then $(CYGPATH_W) 'src/eos.cpp'; else $(CYGPATH_W) '$(srcdir)/src/eos.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/SPHERLS-eos.Tpo src/$(DEPDIR)/SPHERLS-eos.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/eos.cpp' object='src/SPHERLS-eos.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SPHERLS_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/SPHERLS-eos.obj `if test -f 'src/eos.cpp'; then $(CYGPATH_W) 'src/eos.cpp'; else $(CYGPATH_W) '$(srcdir)/src/eos.cpp'; fi`

src/SPHERLS-exception2.o: src/exception2.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SPHERLS_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/SPHERLS-exception2.o -MD -MP -MF src/$(DEPDIR)/SPHERLS-exception2.Tpo -c -o src/SPHERLS-exception2.o `test -f 'src/exception2.cpp' || echo '$(srcdir)/'`src/exception2.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/SPHERLS-exception2.Tpo src/$(DEPDIR)/SPHERLS-exception2.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/exception2.cpp' object='src/SPHERLS-exception2.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SPHERLS_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/SPHERLS-exception2.o `test -f 'src/exception2.cpp' || echo '$(srcdir)/'`src/exception2.cpp

src/SPHERLS-exception2.obj: src/exception2.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SPHERLS_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/SPHERLS-exception2.obj -MD -MP -MF src/$(DEPDIR)/SPHERLS-exception2.Tpo -c -o src/SPHERLS-exception2.obj `if test -f 'src/exception2.cpp'; then $(CYGPATH_W) 'src/exception2.cpp'; else $(CYGPATH_W) '$(srcdir)/src/exception2.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/SPHERLS-exception2.Tpo src/$(DEPDIR)/SPHERLS-exception2.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/exception2.cpp' object='src/SPHERLS-exception2.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SPHERLS_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/SPHERLS-exception2.obj `if test -f 'src/exception2.cpp'; then $(CYGPATH_W) 'src/exception2.cpp'; else $(CYGPATH_W) '$(srcdir)/src/exception2.cpp'; fi`

src/SPHERLS-xmlFunctions.o: src/xmlFunctions.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SPHERLS_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/SPHERLS-xmlFunctions.o -MD -MP -MF src/$(DEPDIR)/SPHERLS-xmlFunctions.Tpo -c -o src/SPHERLS-xmlFunctions.o `test -f 'src/xmlFunctions.cpp' || echo '$(srcdir)/'`src/xmlFunctions.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/SPHERLS-xmlFunctions.Tpo src/$(DEPDIR)/SPHERLS-xmlFunctions.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/xmlFunctions.cpp' object='src/SPHERLS-xmlFunctions.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SPHERLS_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/SPHERLS-xmlFunctions.o `test -f 'src/xmlFunctions.cpp' || echo '$(srcdir)/'`src/xmlFunctions.cpp

src/SPHERLS-xmlFunctions.obj: src/xmlFunctions.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SPHERLS_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/SPHERLS-xmlFunctions.obj -MD -MP -MF src/$(DEPDIR)/SPHERLS-xmlFunctions.Tpo -c -o src/SPHERLS-xmlFunctions.obj `if test -f 'src/xmlFunctions.cpp'; then $(CYGPATH_W) 'src/xmlFunctions.cpp'; else $(CYGPATH_W) '$(srcdir)/src/xmlFunctions.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/SPHERLS-xmlFunctions.Tpo src/$(DEPDIR)/SPHERLS-xmlFunctions.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/xmlFunctions.cpp' object='src/SPHERLS-xmlFunctions.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SPHERLS_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/SPHERLS-xmlFunctions.obj `if test -f 'src/xmlFunctions.cpp'; then $(CYGPATH_W) 'src/xmlFunctions.cpp'; else $(CYGPATH_W) '$(srcdir)/src/xmlFunctions.cpp'; fi`

src/SPHERLS-xmlParser.o: src/xmlParser.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SPHERLS_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/SPHERLS-xmlParser.o -MD -MP -MF src/$(DEPDIR)/SPHERLS-xmlParser.Tpo -c -o src/SPHERLS-xmlParser.o `test -f 'src/xmlParser.cpp' || echo '$(srcdir)/'`src/xmlParser.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/SPHERLS-xmlParser.Tpo src/$(DEPDIR)/SPHERLS-xmlParser.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/xmlParser.cpp' object='src/SPHERLS-xmlParser.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SPHERLS_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/SPHERLS-xmlParser.o `test -f 'src/xmlParser.cpp' || echo '$(srcdir)/'`src/xmlParser.cpp

src/SPHERLS-xmlParser.obj: src/xmlParser.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SPHERLS_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/SPHERLS-xmlParser.obj -MD -MP -MF src/$(DEPDIR)/SPHERLS-xmlParser.Tpo -c -o src/SPHERLS-xmlParser.obj `if test -f 'src/xmlParser.cpp'; then $(CYGPATH_W) 'src/xmlParser.cpp'; else $(CYGPATH_W) '$(srcdir)/src/xmlParser.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/SPHERLS-xmlParser.Tpo src/$(DEPDIR)/SPHERLS-xmlParser.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/xmlParser.cpp' object='src/SPHERLS-xmlParser.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SPHERLS_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/SPHERLS-xmlParser.obj `if test -f 'src/xmlParser.cpp'; then $(CYGPATH_W) 'src/xmlParser.cpp'; else $(CYGPATH_W) '$(srcdir)/src/xmlParser.cpp'; fi`

src/SPHERLSanal/SPHERLSanal-main.o: src/SPHERLSanal/main.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SPHERLSanal_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/SPHERLSanal/SPHERLSanal-main.o -MD -MP -MF src/SPHERLSanal/$(DEPDIR)/SPHERLSanal-main.Tpo -c -o src/SPHERLSanal/SPHERLSanal-main.o `test -f 'src/SPHERLSanal/main.cpp' || echo '$(srcdir)/'`src/SPHERLSanal/main.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/SPHERLSanal/$(DEPDIR)/SPHERLSanal-main.Tpo src/SPHERLSanal/$(DEPDIR)/SPHERLSanal-main.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/SPHERLSanal/main.cpp' object='src/SPHERLSanal/SPHERLSanal-main.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SPHERLSanal_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/SPHERLSanal/SPHERLSanal-main.o `test -f 'src/SPHERLSanal/main.cpp' || echo '$(srcdir)/'`src/SPHERLSanal/main.cpp

src/SPHERLSanal/SPHERLSanal-main.obj: src/SPHERLSanal/main.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SPHERLSanal_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/SPHERLSanal/SPHERLSanal-main.obj -MD -MP -MF src/SPHERLSanal/$(DEPDIR)/SPHERLSanal-main.Tpo -c -o src/SPHERLSanal/SPHERLSanal-main.obj `if test -f 'src/SPHERLSanal/main.cpp'; then $(CYGPATH_W) 'src/SPHERLSanal/main.cpp'; else $(CYGPATH_W) '$(srcdir)/src/SPHERLSanal/main.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/SPHERLSanal/$(DEPDIR)/SPHERLSanal-main.Tpo src/SPHERLSanal/$(DEPDIR)/SPHERLSanal-main.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/SPHERLSanal/main.cpp' object='src/SPHERLSanal/SPHERLSanal-main.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SPHERLSanal_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/SPHERLSanal/SPHERLSanal-main.obj `if test -f 'src/SPHERLSanal/main.cpp'; then $(CYGPATH_W) 'src/SPHERLSanal/main.cpp'; else $(CYGPATH_W) '$(srcdir)/src/SPHERLSanal/main.cpp'; fi`

src/SPHERLSanal-eos.o: src/eos.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SPHERLSanal_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/SPHERLSanal-eos.o -MD -MP -MF src/$(DEPDIR)/SPHERLSanal-eos.Tpo -c -o src/SPHERLSanal-eos.o `test -f 'src/eos.cpp' || echo '$(srcdir)/'`src/eos.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/SPHERLSanal-eos.Tpo src/$(DEPDIR)/SPHERLSanal-eos.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/eos.cpp' object='src/SPHERLSanal-eos.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SPHERLSanal_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/SPHERLSanal-eos.o `test -f 'src/eos.cpp' || echo '$(srcdir)/'`src/eos.cpp

src/SPHERLSanal-eos.obj: src/eos.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SPHERLSanal_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/SPHERLSanal-eos.obj -MD -MP -MF src/$(DEPDIR)/SPHERLSanal-eos.Tpo -c -o src/SPHERLSanal-eos.obj `if test -f 'src/eos.cpp'; then $(CYGPATH_W) 'src/eos.cpp'; else $(CYGPATH_W) '$(srcdir)/src/eos.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/SPHERLSanal-eos.Tpo src/$(DEPDIR)/SPHERLSanal-eos.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/eos.cpp' object='src/SPHERLSanal-eos.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SPHERLSanal_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/SPHERLSanal-eos.obj `if test -f 'src/eos.cpp'; then $(CYGPATH_W) 'src/eos.cpp'; else $(CYGPATH_W) '$(srcdir)/src/eos.cpp'; fi`

src/SPHERLSanal-exception2.o: src/exception2.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SPHERLSanal_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/SPHERLSanal-exception2.o -MD -MP -MF src/$(DEPDIR)/SPHERLSanal-exception2.Tpo -c -o src/SPHERLSanal-exception2.o `test -f 'src/exception2.cpp' || echo '$(srcdir)/'`src/exception2.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/SPHERLSanal-exception2.Tpo src/$(DEPDIR)/SPHERLSanal-exception2.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/exception2.cpp' object='src/SPHERLSanal-exception2.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SPHERLSanal_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/SPHERLSanal-exception2.o `test -f 'src/exception2.cpp' || echo '$(srcdir)/'`src/exception2.cpp

src/SPHERLSanal-exception2.obj: src/exception2.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SPHERLSanal_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/SPHERLSanal-exception2.obj -MD -MP -MF src/$(DEPDIR)/SPHERLSanal-exception2.Tpo -c -o src/SPHERLSanal-exception2.obj `if test -f 'src/exception2.cpp'; then $(CYGPATH_W) 'src/exception2.cpp'; else $(CYGPATH_W) '$(srcdir)/src/exception2.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/SPHERLSanal-exception2.Tpo src/$(DEPDIR)/SPHERLSanal-exception2.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/exception2.cpp' object='src/SPHERLSanal-exception2.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SPHERLSanal_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/SPHERLSanal-exception2.obj `if test -f 'src/exception2.cpp'; then $(CYGPATH_W) 'src/exception2.cpp'; else $(CYGPATH_W) '$(srcdir)/src/exception2.cpp'; fi`

src/SPHERLSgen/SPHERLSgen-main.o: src/SPHERLSgen/main.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SPHERLSgen_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/SPHERLSgen/SPHERLSgen-main.o -MD -MP -MF src/SPHERLSgen/$(DEPDIR)/SPHERLSgen-main.Tpo -c -o src/SPHERLSgen/SPHERLSgen-main.o `test -f 'src/SPHERLSgen/main.cpp' || echo '$(srcdir)/'`src/SPHERLSgen/main.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/SPHERLSgen/$(DEPDIR)/SPHERLSgen-main.Tpo src/SPHERLSgen/$(DEPDIR)/SPHERLSgen-main.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/SPHERLSgen/main.cpp' object='src/SPHERLSgen/SPHERLSgen-main.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SPHERLSgen_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/SPHERLSgen/SPHERLSgen-main.o `test -f 'src/SPHERLSgen/main.cpp' || echo '$(srcdir)/'`src/SPHERLSgen/main.cpp

src/SPHERLSgen/SPHERLSgen-main.obj: src/SPHERLSgen/main.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SPHERLSgen_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/SPHERLSgen/SPHERLSgen-main.obj -MD -MP -MF src/SPHERLSgen/$(DEPDIR)/SPHERLSgen-main.Tpo -c -o src/SPHERLSgen/SPHERLSgen-main.obj `if test -f 'src/SPHERLSgen/main.cpp'; then $(CYGPATH_W) 'src/SPHERLSgen/main.cpp'; else $(CYGPATH_W) '$(srcdir)/src/SPHERLSgen/main.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/SPHERLSgen/$(DEPDIR)/SPHERLSgen-main.Tpo src/SPHERLSgen/$(DEPDIR)/SPHERLSgen-main.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/SPHERLSgen/main.cpp' object='src/SPHERLSgen/SPHERLSgen-main.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SPHERLSgen_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/SPHERLSgen/SPHERLSgen-main.obj `if test -f 'src/SPHERLSgen/main.cpp'; then $(CYGPATH_W) 'src/SPHERLSgen/main.cpp'; else $(CYGPATH_W) '$(srcdir)/src/SPHERLSgen/main.cpp'; fi`

src/SPHERLSgen-exception2.o: src/exception2.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SPHERLSgen_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/SPHERLSgen-exception2.o -MD -MP -MF src/$(DEPDIR)/SPHERLSgen-exception2.Tpo -c -o src/SPHERLSgen-exception2.o `test -f 'src/exception2.cpp' || echo '$(srcdir)/'`src/exception2.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/SPHERLSgen-exception2.Tpo src/$(DEPDIR)/SPHERLSgen-exception2.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/exception2.cpp' object='src/SPHERLSgen-exception2.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SPHERLSgen_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/SPHERLSgen-exception2.o `test -f 'src/exception2.cpp' || echo '$(srcdir)/'`src/exception2.cpp

src/SPHERLSgen-exception2.obj: src/exception2.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SPHERLSgen_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/SPHERLSgen-exception2.obj -MD -MP -MF src/$(DEPDIR)/SPHERLSgen-exception2.Tpo -c -o src/SPHERLSgen-exception2.obj `if test -f 'src/exception2.cpp'; then $(CYGPATH_W) 'src/exception2.cpp'; else $(CYGPATH_W) '$(srcdir)/src/exception2.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/SPHERLSgen-exception2.Tpo src/$(DEPDIR)/SPHERLSgen-exception2.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/exception2.cpp' object='src/SPHERLSgen-exception2.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SPHERLSgen_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/SPHERLSgen-exception2.obj `if test -f 'src/exception2.cpp'; then $(CYGPATH_W) 'src/exception2.cpp'; else $(CYGPATH_W) '$(srcdir)/src/exception2.cpp'; fi`

src/SPHERLSgen-xmlFunctions.o: src/xmlFunctions.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SPHERLSgen_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/SPHERLSgen-xmlFunctions.o -MD -MP -MF src/$(DEPDIR)/SPHERLSgen-xmlFunctions.Tpo -c -o src/SPHERLSgen-xmlFunctions.o `test -f 'src/xmlFunctions.cpp' || echo '$(srcdir)/'`src/xmlFunctions.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/SPHERLSgen-xmlFunctions.Tpo src/$(DEPDIR)/SPHERLSgen-xmlFunctions.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/xmlFunctions.cpp' object='src/SPHERLSgen-xmlFunctions.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SPHERLSgen_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/SPHERLSgen-xmlFunctions.o `test -f 'src/xmlFunctions.cpp' || echo '$(srcdir)/'`src/xmlFunctions.cpp

src/SPHERLSgen-xmlFunctions.obj: src/xmlFunctions.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SPHERLSgen_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/SPHERLSgen-xmlFunctions.obj -MD -MP -MF src/$(DEPDIR)/SPHERLSgen-xmlFunctions.Tpo -c -o src/SPHERLSgen-xmlFunctions.obj `if test -f 'src/xmlFunctions.cpp'; then $(CYGPATH_W) 'src/xmlFunctions.cpp'; else $(CYGPATH_W) '$(srcdir)/src/xmlFunctions.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/SPHERLSgen-xmlFunctions.Tpo src/$(DEPDIR)/SPHERLSgen-xmlFunctions.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/xmlFunctions.cpp' object='src/SPHERLSgen-xmlFunctions.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SPHERLSgen_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/SPHERLSgen-xmlFunctions.obj `if test -f 'src/xmlFunctions.cpp'; then $(CYGPATH_W) 'src/xmlFunctions.cpp'; else $(CYGPATH_W) '$(srcdir)/src/xmlFunctions.cpp'; fi`

src/SPHERLSgen-eos.o: src/eos.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SPHERLSgen_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/SPHERLSgen-eos.o -MD -MP -MF src/$(DEPDIR)/SPHERLSgen-eos.Tpo -c -o src/SPHERLSgen-eos.o `test -f 'src/eos.cpp' || echo '$(srcdir)/'`src/eos.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/SPHERLSgen-eos.Tpo src/$(DEPDIR)/SPHERLSgen-eos.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/eos.cpp' object='src/SPHERLSgen-eos.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SPHERLSgen_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/SPHERLSgen-eos.o `test -f 'src/eos.cpp' || echo '$(srcdir)/'`src/eos.cpp

src/SPHERLSgen-eos.obj: src/eos.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SPHERLSgen_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/SPHERLSgen-eos.obj -MD -MP -MF src/$(DEPDIR)/SPHERLSgen-eos.Tpo -c -o src/SPHERLSgen-eos.obj `if test -f 'src/eos.cpp'; then $(CYGPATH_W) 'src/eos.cpp'; else $(CYGPATH_W) '$(srcdir)/src/eos.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/SPHERLSgen-eos.Tpo src/$(DEPDIR)/SPHERLSgen-eos.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/eos.cpp' object='src/SPHERLSgen-eos.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SPHERLSgen_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/SPHERLSgen-eos.obj `if test -f 'src/eos.cpp'; then $(CYGPATH_W) 'src/eos.cpp'; else $(CYGPATH_W) '$(srcdir)/src/eos.cpp'; fi`

src/SPHERLSgen-xmlParser.o: src/xmlParser.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SPHERLSgen_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/SPHERLSgen-xmlParser.o -MD -MP -MF src/$(DEPDIR)/SPHERLSgen-xmlParser.Tpo -c -o src/SPHERLSgen-xmlParser.o `test -f 'src/xmlParser.cpp' || echo '$(srcdir)/'`src/xmlParser.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/SPHERLSgen-xmlParser.Tpo src/$(DEPDIR)/SPHERLSgen-xmlParser.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/xmlParser.cpp' object='src/SPHERLSgen-xmlParser.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SPHERLSgen_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/SPHERLSgen-xmlParser.o `test -f 'src/xmlParser.cpp' || echo '$(srcdir)/'`src/xmlParser.cpp

src/SPHERLSgen-xmlParser.obj: src/xmlParser.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SPHERLSgen_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/SPHERLSgen-xmlParser.obj -MD -MP -MF src/$(DEPDIR)/SPHERLSgen-xmlParser.Tpo -c -o src/SPHERLSgen-xmlParser.obj `if test -f 'src/xmlParser.cpp'; then $(CYGPATH_W) 'src/xmlParser.cpp'; else $(CYGPATH_W) '$(srcdir)/src/xmlParser.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/SPHERLSgen-xmlParser.Tpo src/$(DEPDIR)/SPHERLSgen-xmlParser.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/xmlParser.cpp' object='src/SPHERLSgen-xmlParser.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SPHERLSgen_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/SPHERLSgen-xmlParser.obj `if test -f 'src/xmlParser.cpp'; then $(CYGPATH_W) 'src/xmlParser.cpp'; else $(CYGPATH_W) '$(srcdir)/src/xmlParser.cpp'; fi`
install-AFOPACITYGN93DATA: $(AFOPACITYGN93_DATA)
	@$(NORMAL_INSTALL)
	@list='$(AFOPACITYGN93_DATA)'; test -n "$(AFOPACITYGN93dir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(AFOPACITYGN93dir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(AFOPACITYGN93dir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(AFOPACITYGN93dir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(AFOPACITYGN93dir)" || exit $$?; \
	done

uninstall-AFOPACITYGN93DATA:
	@$(NORMAL_UNINSTALL)
	@list='$(AFOPACITYGN93_DATA)'; test -n "$(AFOPACITYGN93dir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(AFOPACITYGN93dir)'; $(am__uninstall_files_from_dir)
install-GN93hzDATA: $(GN93hz_DATA)
	@$(NORMAL_INSTALL)
	@list='$(GN93hz_DATA)'; test -n "$(GN93hzdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(GN93hzdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(GN93hzdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(GN93hzdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(GN93hzdir)" || exit $$?; \
	done

uninstall-GN93hzDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(GN93hz_DATA)'; test -n "$(GN93hzdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(GN93hzdir)'; $(am__uninstall_files_from_dir)
install-atmospheresDATA: $(atmospheres_DATA)
	@$(NORMAL_INSTALL)
	@list='$(atmospheres_DATA)'; test -n "$(atmospheresdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(atmospheresdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(atmospheresdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(atmospheresdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(atmospheresdir)" || exit $$?; \
	done

uninstall-atmospheresDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(atmospheres_DATA)'; test -n "$(atmospheresdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(atmospheresdir)'; $(am__uninstall_files_from_dir)
install-energyproDATA: $(energypro_DATA)
	@$(NORMAL_INSTALL)
	@list='$(energypro_DATA)'; test -n "$(energyprodir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(energyprodir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(energyprodir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(energyprodir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(energyprodir)" || exit $$?; \
	done

uninstall-energyproDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(energypro_DATA)'; test -n "$(energyprodir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(energyprodir)'; $(am__uninstall_files_from_dir)
install-eosDATA: $(eos_DATA)
	@$(NORMAL_INSTALL)
	@list='$(eos_DATA)'; test -n "$(eosdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(eosdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(eosdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(eosdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(eosdir)" || exit $$?; \
	done

uninstall-eosDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(eos_DATA)'; test -n "$(eosdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(eosdir)'; $(am__uninstall_files_from_dir)
install-evtkDATA: $(evtk_DATA)
	@$(NORMAL_INSTALL)
	@list='$(evtk_DATA)'; test -n "$(evtkdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(evtkdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(evtkdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(evtkdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(evtkdir)" || exit $$?; \
	done

uninstall-evtkDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(evtk_DATA)'; test -n "$(evtkdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(evtkdir)'; $(am__uninstall_files_from_dir)
install-evtkexampleDATA: $(evtkexample_DATA)
	@$(NORMAL_INSTALL)
	@list='$(evtkexample_DATA)'; test -n "$(evtkexampledir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(evtkexampledir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(evtkexampledir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(evtkexampledir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(evtkexampledir)" || exit $$?; \
	done

uninstall-evtkexampleDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(evtkexample_DATA)'; test -n "$(evtkexampledir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(evtkexampledir)'; $(am__uninstall_files_from_dir)
install-manualsDATA: $(manuals_DATA)
	@$(NORMAL_INSTALL)
	@list='$(manuals_DATA)'; test -n "$(manualsdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(manualsdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(manualsdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(manualsdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(manualsdir)" || exit $$?; \
	done

uninstall-manualsDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(manuals_DATA)'; test -n "$(manualsdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(manualsdir)'; $(am__uninstall_files_from_dir)
install-opaleos2005DATA: $(opaleos2005_DATA)
	@$(NORMAL_INSTALL)
	@list='$(opaleos2005_DATA)'; test -n "$(opaleos2005dir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(opaleos2005dir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(opaleos2005dir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(opaleos2005dir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(opaleos2005dir)" || exit $$?; \
	done

uninstall-opaleos2005DATA:
	@$(NORMAL_UNINSTALL)
	@list='$(opaleos2005_DATA)'; test -n "$(opaleos2005dir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(opaleos2005dir)'; $(am__uninstall_files_from_dir)
install-refcalcs1DNADATA: $(refcalcs1DNA_DATA)
	@$(NORMAL_INSTALL)
	@list='$(refcalcs1DNA_DATA)'; test -n "$(refcalcs1DNAdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(refcalcs1DNAdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(refcalcs1DNAdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(refcalcs1DNAdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(refcalcs1DNAdir)" || exit $$?; \
	done

uninstall-refcalcs1DNADATA:
	@$(NORMAL_UNINSTALL)
	@list='$(refcalcs1DNA_DATA)'; test -n "$(refcalcs1DNAdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(refcalcs1DNAdir)'; $(am__uninstall_files_from_dir)
install-refcalcs2DNADATA: $(refcalcs2DNA_DATA)
	@$(NORMAL_INSTALL)
	@list='$(refcalcs2DNA_DATA)'; test -n "$(refcalcs2DNAdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(refcalcs2DNAdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(refcalcs2DNAdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(refcalcs2DNAdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(refcalcs2DNAdir)" || exit $$?; \
	done

uninstall-refcalcs2DNADATA:
	@$(NORMAL_UNINSTALL)
	@list='$(refcalcs2DNA_DATA)'; test -n "$(refcalcs2DNAdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(refcalcs2DNAdir)'; $(am__uninstall_files_from_dir)
install-refcalcs3DNADATA: $(refcalcs3DNA_DATA)
	@$(NORMAL_INSTALL)
	@list='$(refcalcs3DNA_DATA)'; test -n "$(refcalcs3DNAdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(refcalcs3DNAdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(refcalcs3DNAdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(refcalcs3DNAdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(refcalcs3DNAdir)" || exit $$?; \
	done

uninstall-refcalcs3DNADATA:
	@$(NORMAL_UNINSTALL)
	@list='$(refcalcs3DNA_DATA)'; test -n "$(refcalcs3DNAdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(refcalcs3DNAdir)'; $(am__uninstall_files_from_dir)
install-templatexmlDATA: $(templatexml_DATA)
	@$(NORMAL_INSTALL)
	@list='$(templatexml_DATA)'; test -n "$(templatexmldir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(templatexmldir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(templatexmldir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(templatexmldir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(templatexmldir)" || exit $$?; \
	done

uninstall-templatexmlDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(templatexml_DATA)'; test -n "$(templatexmldir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(templatexmldir)'; $(am__uninstall_files_from_dir)
install-velocityproDATA: $(velocitypro_DATA)
	@$(NORMAL_INSTALL)
	@list='$(velocitypro_DATA)'; test -n "$(velocityprodir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(velocityprodir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(velocityprodir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(velocityprodir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(velocityprodir)" || exit $$?; \
	done

uninstall-velocityproDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(velocitypro_DATA)'; test -n "$(velocityprodir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(velocityprodir)'; $(am__uninstall_files_from_dir)

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscope: cscope.files
	test ! -s cscope.files \
	  || $(CSCOPE) -b -q $(AM_CSCOPEFLAGS) $(CSCOPEFLAGS) -i cscope.files $(CSCOPE_ARGS)
clean-cscope:
	-rm -f cscope.files
cscope.files: clean-cscope cscopelist
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
	-rm -f cscope.out cscope.in.out cscope.po.out cscope.files

distdir: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) distdir-am

distdir-am: $(DISTFILES)
	$(am__remove_distdir)
	test -d "$(distdir)" || mkdir "$(distdir)"
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	-test -n "$(am__skip_mode_fix)" \
	|| find "$(distdir)" -type d ! -perm -755 \
		-exec chmod u+rwx,go+rx {} \; -o \
	  ! -type d ! -perm -444 -links 1 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -400 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -444 -exec $(install_sh) -c -m a+r {} {} \; \
	|| chmod -R a+r "$(distdir)"
dist-gzip: distdir
	tardir=$(distdir) && $(am__tar) | eval GZIP= gzip $(GZIP_ENV) -c >$(distdir).tar.gz
	$(am__post_remove_distdir)

dist-bzip2: distdir
	tardir=$(distdir) && $(am__tar) | BZIP2=$${BZIP2--9} bzip2 -c >$(distdir).tar.bz2
	$(am__post_remove_distdir)

dist-lzip: distdir
	tardir=$(distdir) && $(am__tar) | lzip -c $${LZIP_OPT--9} >$(distdir).tar.lz
	$(am__post_remove_distdir)

dist-xz: distdir
	tardir=$(distdir) && $(am__tar) | XZ_OPT=$${XZ_OPT--e} xz -c >$(distdir).tar.xz
	$(am__post_remove_distdir)

dist-tarZ: distdir
	@echo WARNING: "Support for distribution archives compressed with" \
		       "legacy program 'compress' is deprecated." >&2
	@echo WARNING: "It will be removed altogether in Automake 2.0" >&2
	tardir=$(distdir) && $(am__tar) | compress -c >$(distdir).tar.Z
	$(am__post_remove_distdir)

dist-shar: distdir
	@echo WARNING: "Support for shar distribution archives is" \
	               "deprecated." >&2
	@echo WARNING: "It will be removed altogether in Automake 2.0" >&2
	shar $(distdir) | eval GZIP= gzip $(GZIP_ENV) -c >$(distdir).shar.gz
	$(am__post_remove_distdir)

dist-zip: distdir
	-rm -f $(distdir).zip
	zip -rq $(distdir).zip $(distdir)
	$(am__post_remove_distdir)

dist dist-all:
	$(MAKE) $(AM_MAKEFLAGS) $(DIST_TARGETS) am__post_remove_distdir='@:'
	$(am__post_remove_distdir)

# This target untars the dist file and tries a VPATH configuration.  Then
# it guarantees that the distribution is self-contained by making another
# tarfile.
distcheck: dist
	case '$(DIST_ARCHIVES)' in \
	*.tar.gz*) \
	  eval GZIP= gzip $(GZIP_ENV) -dc $(distdir).tar.gz | $(am__untar) ;;\
	*.tar.bz2*) \
	  bzip2 -dc $(distdir).tar.bz2 | $(am__untar) ;;\
	*.tar.lz*) \
	  lzip -dc $(distdir).tar.lz | $(am__untar) ;;\
	*.tar.xz*) \
	  xz -dc $(distdir).tar.xz | $(am__untar) ;;\
	*.tar.Z*) \
	  uncompress -c $(distdir).tar.Z | $(am__untar) ;;\
	*.shar.gz*) \
	  eval GZIP= gzip $(GZIP_ENV) -dc $(distdir).shar.gz | unshar ;;\
	*.zip*) \
	  unzip $(distdir).zip ;;\
	esac
	chmod -R a-w $(distdir)
	chmod u+w $(distdir)
	mkdir $(distdir)/_build $(distdir)/_build/sub $(distdir)/_inst
	chmod a-w $(distdir)
	test -d $(distdir)/_build || exit 0; \
	dc_install_base=`$(am__cd) $(distdir)/_inst && pwd | sed -e 's,^[^:\\/]:[\\/],/,'` \
	  && dc_destdir="$${TMPDIR-/tmp}/am-dc-$$$$/" \
	  && am__cwd=`pwd` \
	  && $(am__cd) $(distdir)/_build/sub \
	  && ../../configure \
	    $(AM_DISTCHECK_CONFIGURE_FLAGS) \
	    $(DISTCHECK_CONFIGURE_FLAGS) \
	    --srcdir=../.. --prefix="$$dc_install_base" \
	  && $(MAKE) $(AM_MAKEFLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) dvi \
	  && $(MAKE) $(AM_MAKEFLAGS) check \
	  && $(MAKE) $(AM_MAKEFLAGS) install \
	  && $(MAKE) $(AM_MAKEFLAGS) installcheck \
	  && $(MAKE) $(AM_MAKEFLAGS) uninstall \
	  && $(MAKE) $(AM_MAKEFLAGS) distuninstallcheck_dir="$$dc_install_base" \
	        distuninstallcheck \
	  && chmod -R a-w "$$dc_install_base" \
	  && ({ \
	       (cd ../.. && umask 077 && mkdir "$$dc_destdir") \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" install \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" uninstall \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" \
	            distuninstallcheck_dir="$$dc_destdir" distuninstallcheck; \
	      } || { rm -rf "$$dc_destdir"; exit 1; }) \
	  && rm -rf "$$dc_destdir" \
	  && $(MAKE) $(AM_MAKEFLAGS) dist \
	  && rm -rf $(DIST_ARCHIVES) \
	  && $(MAKE) $(AM_MAKEFLAGS) distcleancheck \
	  && cd "$$am__cwd" \
	  || exit 1
	$(am__post_remove_distdir)
	@(echo "$(distdir) archives ready for distribution: "; \
	  list='$(DIST_ARCHIVES)'; for i in $$list; do echo $$i; done) | \
	  sed -e 1h -e 1s/./=/g -e 1p -e 1x -e '$$p' -e '$$x'
distuninstallcheck:
	@test -n '$(distuninstallcheck_dir)' || { \
	  echo 'ERROR: trying to run $@ with an empty' \
	       '$$(distuninstallcheck_dir)' >&2; \
	  exit 1; \
	}; \
	$(am__cd) '$(distuninstallcheck_dir)' || { \
	  echo 'ERROR: cannot chdir into $(distuninstallcheck_dir)' >&2; \
	  exit 1; \
	}; \
	test `$(am__distuninstallcheck_listfiles) | wc -l` -eq 0 \
	   || { echo "ERROR: files left after uninstall:" ; \
	        if test -n "$(DESTDIR)"; then \
	          echo "  (check DESTDIR support)"; \
	        fi ; \
	        $(distuninstallcheck_listfiles) ; \
	        exit 1; } >&2
distcleancheck: distclean
	@if test '$(srcdir)' = . ; then \
	  echo "ERROR: distcleancheck can only run from a VPATH build" ; \
	  exit 1 ; \
	fi
	@test `$(distcleancheck_listfiles) | wc -l` -eq 0 \
	  || { echo "ERROR: files left in build directory after distclean:" ; \
	       $(distcleancheck_listfiles) ; \
	       exit 1; } >&2
check-am: all-am
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-am
all-am: Makefile $(PROGRAMS) $(SCRIPTS) $(DATA) config.h
installdirs:
	for dir in "$(DESTDIR)$(bindir)" "$(DESTDIR)$(bindir)" "$(DESTDIR)$(AFOPACITYGN93dir)" "$(DESTDIR)$(GN93hzdir)" "$(DESTDIR)$(atmospheresdir)" "$(DESTDIR)$(energyprodir)" "$(DESTDIR)$(eosdir)" "$(DESTDIR)$(evtkdir)" "$(DESTDIR)$(evtkexampledir)" "$(DESTDIR)$(manualsdir)" "$(DESTDIR)$(opaleos2005dir)" "$(DESTDIR)$(refcalcs1DNAdir)" "$(DESTDIR)$(refcalcs2DNAdir)" "$(DESTDIR)$(refcalcs3DNAdir)" "$(DESTDIR)$(templatexmldir)" "$(DESTDIR)$(velocityprodir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-rm -f src/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/$(am__dirstamp)
	-rm -f src/SPHERLS/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/SPHERLS/$(am__dirstamp)
	-rm -f src/SPHERLSanal/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/SPHERLSanal/$(am__dirstamp)
	-rm -f src/SPHERLSgen/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/SPHERLSgen/$(am__dirstamp)
	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-local mostlyclean-am

distclean: distclean-am
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
		-rm -f src/$(DEPDIR)/SPHERLS-eos.Po
	-rm -f src/$(DEPDIR)/SPHERLS-exception2.Po
	-rm -f src/$(DEPDIR)/SPHERLS-xmlFunctions.Po
	-rm -f src/$(DEPDIR)/SPHERLS-xmlParser.Po
	-rm -f src/$(DEPDIR)/SPHERLSanal-eos.Po
	-rm -f src/$(DEPDIR)/SPHERLSanal-exception2.Po
	-rm -f src/$(DEPDIR)/SPHERLSgen-eos.Po
	-rm -f src/$(DEPDIR)/SPHERLSgen-exception2.Po
	-rm -f src/$(DEPDIR)/SPHERLSgen-xmlFunctions.Po
	-rm -f src/$(DEPDIR)/SPHERLSgen-xmlParser.Po
	-rm -f src/SPHERLS/$(DEPDIR)/SPHERLS-dataManipulation.Po
	-rm -f src/SPHERLS/$(DEPDIR)/SPHERLS-dataMonitoring.Po
	-rm -f src/SPHERLS/$(DEPDIR)/SPHERLS-fileExists.Po
	-rm -f src/SPHERLS/$(DEPDIR)/SPHERLS-global.Po
	-rm -f src/SPHERLS/$(DEPDIR)/SPHERLS-main.Po
	-rm -f src/SPHERLS/$(DEPDIR)/SPHERLS-physEquations.Po
	-rm -f src/SPHERLS/$(DEPDIR)/SPHERLS-procTop.Po
	-rm -f src/SPHERLS/$(DEPDIR)/SPHERLS-profileData.Po
	-rm -f src/SPHERLS/$(DEPDIR)/SPHERLS-time.Po
	-rm -f src/SPHERLS/$(DEPDIR)/SPHERLS-watchzone.Po
	-rm -f src/SPHERLSanal/$(DEPDIR)/SPHERLSanal-main.Po
	-rm -f src/SPHERLSgen/$(DEPDIR)/SPHERLSgen-main.Po
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-hdr distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-AFOPACITYGN93DATA install-GN93hzDATA \
	install-atmospheresDATA install-energyproDATA install-eosDATA \
	install-evtkDATA install-evtkexampleDATA install-manualsDATA \
	install-opaleos2005DATA install-refcalcs1DNADATA \
	install-refcalcs2DNADATA install-refcalcs3DNADATA \
	install-templatexmlDATA install-velocityproDATA

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS install-binSCRIPTS

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf $(top_srcdir)/autom4te.cache
		-rm -f src/$(DEPDIR)/SPHERLS-eos.Po
	-rm -f src/$(DEPDIR)/SPHERLS-exception2.Po
	-rm -f src/$(DEPDIR)/SPHERLS-xmlFunctions.Po
	-rm -f src/$(DEPDIR)/SPHERLS-xmlParser.Po
	-rm -f src/$(DEPDIR)/SPHERLSanal-eos.Po
	-rm -f src/$(DEPDIR)/SPHERLSanal-exception2.Po
	-rm -f src/$(DEPDIR)/SPHERLSgen-eos.Po
	-rm -f src/$(DEPDIR)/SPHERLSgen-exception2.Po
	-rm -f src/$(DEPDIR)/SPHERLSgen-xmlFunctions.Po
	-rm -f src/$(DEPDIR)/SPHERLSgen-xmlParser.Po
	-rm -f src/SPHERLS/$(DEPDIR)/SPHERLS-dataManipulation.Po
	-rm -f src/SPHERLS/$(DEPDIR)/SPHERLS-dataMonitoring.Po
	-rm -f src/SPHERLS/$(DEPDIR)/SPHERLS-fileExists.Po
	-rm -f src/SPHERLS/$(DEPDIR)/SPHERLS-global.Po
	-rm -f src/SPHERLS/$(DEPDIR)/SPHERLS-main.Po
	-rm -f src/SPHERLS/$(DEPDIR)/SPHERLS-physEquations.Po
	-rm -f src/SPHERLS/$(DEPDIR)/SPHERLS-procTop.Po
	-rm -f src/SPHERLS/$(DEPDIR)/SPHERLS-profileData.Po
	-rm -f src/SPHERLS/$(DEPDIR)/SPHERLS-time.Po
	-rm -f src/SPHERLS/$(DEPDIR)/SPHERLS-watchzone.Po
	-rm -f src/SPHERLSanal/$(DEPDIR)/SPHERLSanal-main.Po
	-rm -f src/SPHERLSgen/$(DEPDIR)/SPHERLSgen-main.Po
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-AFOPACITYGN93DATA uninstall-GN93hzDATA \
	uninstall-atmospheresDATA uninstall-binPROGRAMS \
	uninstall-binSCRIPTS uninstall-energyproDATA uninstall-eosDATA \
	uninstall-evtkDATA uninstall-evtkexampleDATA \
	uninstall-manualsDATA uninstall-opaleos2005DATA \
	uninstall-refcalcs1DNADATA uninstall-refcalcs2DNADATA \
	uninstall-refcalcs3DNADATA uninstall-templatexmlDATA \
	uninstall-velocityproDATA

.MAKE: all check install install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am am--depfiles am--refresh check \
	check-am clean clean-binPROGRAMS clean-cscope clean-generic \
	clean-local cscope cscopelist-am ctags ctags-am dist dist-all \
	dist-bzip2 dist-gzip dist-lzip dist-shar dist-tarZ dist-xz \
	dist-zip distcheck distclean distclean-compile \
	distclean-generic distclean-hdr distclean-tags distcleancheck \
	distdir distuninstallcheck dvi dvi-am html html-am info \
	info-am install install-AFOPACITYGN93DATA install-GN93hzDATA \
	install-am install-atmospheresDATA install-binPROGRAMS \
	install-binSCRIPTS install-data install-data-am install-dvi \
	install-dvi-am install-energyproDATA install-eosDATA \
	install-evtkDATA install-evtkexampleDATA install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-man install-manualsDATA \
	install-opaleos2005DATA install-pdf install-pdf-am install-ps \
	install-ps-am install-refcalcs1DNADATA \
	install-refcalcs2DNADATA install-refcalcs3DNADATA \
	install-strip install-templatexmlDATA install-velocityproDATA \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags tags-am uninstall \
	uninstall-AFOPACITYGN93DATA uninstall-GN93hzDATA uninstall-am \
	uninstall-atmospheresDATA uninstall-binPROGRAMS \
	uninstall-binSCRIPTS uninstall-energyproDATA uninstall-eosDATA \
	uninstall-evtkDATA uninstall-evtkexampleDATA \
	uninstall-manualsDATA uninstall-opaleos2005DATA \
	uninstall-refcalcs1DNADATA uninstall-refcalcs2DNADATA \
	uninstall-refcalcs3DNADATA uninstall-templatexmlDATA \
	uninstall-velocityproDATA

.PRECIOUS: Makefile


@HDF_ENABLE_TRUE@src/pythonextensions/lib/hdf.so: src/pythonextensions/hdf/hdfmodule.cpp src/pythonextensions/hdf/setup.py.in
@HDF_ENABLE_TRUE@	(cd	src/pythonextensions/hdf;	python setup.py build;python setup.py install --prefix='../' --install-lib=../lib)

#make eos class available in python
@CYTHON_ENABLE_TRUE@src/pythonextensions/lib/eos.so: src/pythonextensions/eos/eos.pyx src/pythonextensions/eos/setup.py src/eos.cpp src/eos.h src/exception2.h src/exception2.cpp
@CYTHON_ENABLE_TRUE@	(cd	src/pythonextensions/eos;	cp ../../eos.cpp ./eos_tmp.cpp;	cp ../../eos.h .;	cp ../../exception2.h .;	cp ../../exception2.cpp .;)
@CYTHON_ENABLE_TRUE@	(cd	src/pythonextensions/eos;	python setup.py build;python setup.py install --prefix='../' --install-lib=../lib)

src/pythonextensions/lib/cevtk.so: ${cevtk_SOURCE}
	(cd	src/pythonextensions/evtk;	python setup.py build;python setup.py install --prefix='../' --install-lib=../lib)

clean-local:
	-rm -rf src/pythonextensions/eos/build
	-rm -rf src/pythonextensions/hdf/build
	-rm -rf src/pythonextensions/lib
	-rm -rf src/pythonextensions/evtk/build

#docs/manuals/SPHERLS_Ref_Manual.pdf
#docs/manuals/SPHERLSgen_Ref_Manual.pdf
#docs/manuals/SPHERLSanal_Ref_Manual.pdf
#docs/manuals/Scripts_Ref_Manual.pdf
#fuck doxygen, should just use latex
@MAKE_DOCS_TRUE@docs: docs/manuals/SPHERLS_User_Guide.pdf

@MAKE_DOCS_TRUE@.PHONY:docs

@MAKE_DOCS_TRUE@docs/manuals/SPHERLS_User_Guide.pdf: src/docs/userguide.tex
@MAKE_DOCS_TRUE@	(cd	src/docs;	pdflatex userguide.tex)
@MAKE_DOCS_TRUE@	(cd	src/docs;	pdflatex userguide.tex)#needs to be run twice to properly pick up bookmarks
@MAKE_DOCS_TRUE@	(cd	src/docs;	cp userguide.pdf ../../docs/manuals/SPHERLS_User_Guide.pdf)

#docs/manuals/SPHERLS_Ref_Manual.pdf:	${SPHERLS_SOURCES}	src/SPHERLS/Doxyfile
#	(cd	src/SPHERLS;echo	${PWD};	doxygen)
#	(cd	src/SPHERLS/docs/latex;	make	pdf;)
#	(cd	src/SPHERLS/docs/latex;mv	refman.pdf	../../../../docs/manuals/SPHERLS_Ref_Manual.pdf)

#docs/manuals/SPHERLSgen_Ref_Manual.pdf:	${SPHERLSgen_SOURCES}	src/SPHERLSgen/Doxyfile
#	(cd	src/SPHERLSgen;	doxygen)
#	(cd	src/SPHERLSgen/docs/latex;	make	pdf;)
#	(cd	src/SPHERLSgen/docs/latex;mv	refman.pdf	../../../../docs/manuals/SPHERLSgen_Ref_Manual.pdf)

#docs/manuals/SPHERLSanal_Ref_Manual.pdf:	${SPHERLSanal_SOURCES}	src/SPHERLSanal/Doxyfile
#	(cd	src/SPHERLSanal;	doxygen)
#	(cd	src/SPHERLSanal/docs/latex;	make	pdf;)
#	(cd	src/SPHERLSanal/docs/latex;mv	refman.pdf	../../../../docs/manuals/SPHERLSanal_Ref_Manual.pdf)

#docs/manuals/Scripts_Ref_Manual.pdf:	scripts/Doxyfile	scripts/*.py
#	(cd	scripts;	doxygen)
#	(cd	scripts/docs/latex;	make	pdf;)
#	(cd	scripts/docs/latex;mv	refman.pdf	../../../docs/manuals/Scripts_Ref_Manual.pdf)

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
